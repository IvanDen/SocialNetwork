{"version":3,"sources":["components/Main/Dialogs/DialogsContainer.jsx"],"names":["DialogsContainer","this","props","React","Component","compose","connect","state","dialogsPage","sendTextChat","withAuthRedirect"],"mappings":"4NASMA,E,iLAGE,OACI,kBAAC,IAAYC,KAAKC,W,GAJCC,IAAMC,WAgBtBC,sBACXC,aAPkB,SAACC,GAAD,MAAY,CAC9BC,YAAaD,EAAMC,eAMM,CAACC,mBAC1BC,IAFWL,CAGbL","file":"static/js/5.aa987a02.chunk.js","sourcesContent":["import React from 'react';\r\nimport {sendTextChat} from \"../../../redux/dialogs-reduser\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass DialogsContainer extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Dialogs {...this.props}                     />\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    dialogsPage: state.dialogsPage,\r\n});\r\n\r\n\r\n/*На вход compose получает значение, которое будет передано в качестве аргумента для первой функции, которая в свою очередь передает результат следующей, в конечном счете compose возвращает единственное значение, результат работы всех функций.*/\r\nexport default compose(\r\n    connect(mapStateToProps, {sendTextChat}),\r\n    withAuthRedirect\r\n)(DialogsContainer);"],"sourceRoot":""}