{"version":3,"sources":["utils/validators.js","components/Common/FormsControls/FormsControls.js","components/Common/FormsControls/FormsControls.module.css","components/Login/Login.module.css","components/Login/Login.jsx"],"names":["requiredField","value","maxLengthCreator","maxLength","length","FormControl","input","meta","touched","error","children","hasError","className","Class","formControl","inputWrap","Textarea","props","restProps","child","element","Input","createField","placeholder","name","component","validateObj","text","formControlWrap","validate","module","exports","maxLength30","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","Styles","formLogin","emailInput","passwInput","type","formSummaryError","connect","state","isAuth","auth","login","to","formData","email","password","rememberMe"],"mappings":"gHAAA,oEAAO,IAAMA,EAAgB,SAACC,GAE1B,IAAIA,EAGJ,MAAO,qBAGEC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAC5C,GAAIA,EAAMG,OAASD,EACf,MAAM,iBAAN,OAAwBA,EAAxB,e,uMCJFE,EAAc,SAAC,GAAwD,EAAvDC,MAAwD,IAAD,IAAhDC,KAAOC,EAAyC,EAAzCA,QAASC,EAAgC,EAAhCA,MAAQC,EAAwB,EAAxBA,SAC3CC,GADmE,2CACxDH,GAAWC,GAC5B,OACI,yBAAKG,UAAWC,IAAMC,YAAc,KAAOH,EAAWE,IAAMJ,MAAQ,KAChE,yBAAKG,UAAWC,IAAME,WACjBL,GAEJC,GAAY,8BAAOF,KAMnBO,EAAW,SAACC,GAAU,IAExBX,EAA6CW,EAA7CX,MAAgCY,GAAaD,EAAtCV,KAAsCU,EAAhCE,MAAgCF,EAAzBG,QAFI,YAEqBH,EAFrB,qCAG/B,OAAO,kBAACZ,EAAgBY,EAAO,8CAAcX,EAAWY,MAG/CG,EAAQ,SAACJ,GAAW,IACtBX,EAA6CW,EAA7CX,MAAgCY,GAAaD,EAAtCV,KAAsCU,EAAhCE,MAAgCF,EAAzBG,QADC,YACwBH,EADxB,qCAE5B,OAAO,kBAACZ,EAAgBY,EAAO,2CAAWX,EAAWY,MAG5CI,EAAc,SAACC,EAAaC,EAAMC,EAAWC,GAA/B,IAA4CT,EAA5C,uDAAoD,GAAIU,EAAxD,uDAA+D,GAA/D,OACvB,yBAAKf,UAAWC,IAAMe,iBAClB,kBAAC,IAAD,eACIL,YAAaA,EACbC,KAAMA,EACNC,UAAWA,EACXI,SAAUH,GACNT,IANZ,IAOQU,K,oBCrCZG,EAAOC,QAAU,CAAC,gBAAkB,uCAAuC,UAAY,iCAAiC,YAAc,mCAAmC,MAAQ,+B,oBCAjLD,EAAOC,QAAU,CAAC,UAAY,yBAAyB,YAAc,2BAA2B,MAAQ,qBAAqB,iBAAmB,kC,iCCDhJ,gGAWMC,EAAc9B,YAAiB,IAyB/B+B,EAAiBC,YAAU,CAACC,KAAM,SAAjBD,EAxBL,SAAC,GAA2B,IAA1BE,EAAyB,EAAzBA,aAAc3B,EAAW,EAAXA,MAC9B,OACI,0BAAM4B,SAAUD,EAAcxB,UAAW0B,IAAOC,WAC5C,qCACA,yBAAK3B,UAAW0B,IAAOE,YAClBlB,YAAY,QAAS,QAASD,IAAO,CAACrB,IAAegC,KAE1D,yBAAKpB,UAAW0B,IAAOG,YAClBnB,YAAY,WAAY,WAAYD,IAAO,CAACrB,IAAegC,GAAc,CAACU,KAAM,cAEhFpB,YAAY,KAAM,aAAcD,IAAO,GAAI,CAACqB,KAAM,YAAa,eAEhEjC,GACA,yBAAKG,UAAW0B,IAAOK,kBAClBlC,GAGT,6BACI,8CA2BDmC,uBAJS,SAACC,GAAD,MAAY,CAChCC,OAAQD,EAAME,KAAKD,UAGiB,CAACE,WAA1BJ,EAnBD,SAAC3B,GAKX,OAAIA,EAAM6B,OACC,kBAAC,IAAD,CAAUG,GAAI,aAIrB,6BACI,kBAAChB,EAAD,CAAgBI,SAVP,SAACa,GACdjC,EAAM+B,MAAME,EAASC,MAAOD,EAASE,SAAUF,EAASG","file":"static/js/6.a34f2c81.chunk.js","sourcesContent":["export const requiredField = (value) => {\r\n    //Check if there is a value in the input field\r\n    if (value)\r\n        return undefined;\r\n\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength)\r\n        return `Max length is ${maxLength} symbols`;\r\n\r\n    return undefined;\r\n}","import React from \"react\";\r\nimport Class from './FormsControls.module.css';\r\nimport {requiredField} from \"../../../utils/validators\";\r\nimport {Field} from \"redux-form\";\r\n\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children, ...props}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={Class.formControl + \" \" + (hasError ? Class.error : \"\")}>\r\n            <div className={Class.inputWrap}>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    // Метод деструктуризации inpus, meta, ...props\r\n    const {input, meta, child, element, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, element, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, component, validateObj, props = {}, text = \"\") => (\r\n    <div className={Class.formControlWrap}>\r\n        <Field\r\n            placeholder={placeholder}\r\n            name={name}\r\n            component={component}\r\n            validate={validateObj}\r\n            {...props}\r\n        /> {text}\r\n    </div>\r\n)\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControlWrap\":\"FormsControls_formControlWrap__gyDky\",\"inputWrap\":\"FormsControls_inputWrap__go7U1\",\"formControl\":\"FormsControls_formControl__3GIpO\",\"error\":\"FormsControls_error__2z09f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formLogin\":\"Login_formLogin__1U2Gi\",\"formControl\":\"Login_formControl__8zwqT\",\"error\":\"Login_error__1aiw6\",\"formSummaryError\":\"Login_formSummaryError__2CviV\"};","import React from 'react';\r\nimport Styles from './Login.module.css';\r\n\r\nimport {connect} from \"react-redux\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../Common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, requiredField} from \"../../utils/validators\";\r\nimport {login} from \"../../redux/auth-reduser\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nconst maxLength30 = maxLengthCreator(30);\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit} className={Styles.formLogin}>\r\n            <h1>Login</h1>\r\n            <div className={Styles.emailInput}>\r\n                {createField(\"Email\", \"email\", Input, [requiredField, maxLength30])}\r\n            </div>\r\n            <div className={Styles.passwInput}>\r\n                {createField(\"Password\", \"password\", Input, [requiredField, maxLength30], {type: \"password\"})}\r\n            </div>\r\n                {createField(null, \"rememberMe\", Input, [], {type: \"checkbox\"}, \"remember me\")}\r\n            {\r\n                error &&\r\n                <div className={Styles.formSummaryError}>\r\n                    {error}\r\n                </div>\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <LoginReduxForm onSubmit={onSubmit} />\r\n        </div>\r\n    );\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default connect(mapStateToProps, {login})(Login);"],"sourceRoot":""}