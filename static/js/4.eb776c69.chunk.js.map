{"version":3,"sources":["utils/validators.js","components/Common/FormsControls/FormsControls.js","components/Common/FormsControls/FormsControls.module.css","components/Main/Profile/Profileinfo/Profileinfo.module.css","components/Main/Profile/profile.module.css","components/Main/Profile/MyPosts/MyPosts.module.css","components/Main/Profile/MyPosts/Post/Post.module.css","components/Main/Profile/MyPosts/Post/Post.jsx","components/Main/Profile/MyPosts/MyPosts.jsx","components/Main/Profile/MyPosts/MyPostsContainer.jsx","components/Main/Profile/Profileinfo/ProfileInfoForm/ProfileInfoForm.jsx","components/Main/Profile/Profileinfo/Contact/Contact.jsx","components/Main/Profile/Profileinfo/ProfileStatusWithHooks.jsx","components/Main/Profile/Profileinfo/ProfileMainInfo/ProfileMainInfo.jsx","components/Main/Profile/Profileinfo/Profileinfo.jsx","components/Main/Profile/Profile.jsx","components/Main/Profile/ProfileContainer.jsx"],"names":["requiredField","value","maxLengthCreator","maxLength","length","FormControl","input","meta","touched","error","children","hasError","className","Class","formControl","inputWrap","Textarea","props","restProps","child","element","Input","createField","placeholder","name","component","validateObj","text","formControlWrap","validate","module","exports","Post","item","imgWrap","src","alt","messagePanel","message","likeCount","maxLength10","AddNewPostFormRedux","reduxForm","form","postForm","onSubmit","handleSubmit","MyPosts","React","memo","createRef","postElement","posts","reverse","map","post","key","id","postsFeed","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","ProfileDataFormReduxForm","isOwner","profile","info","ownInfo","onClick","formSummaryError","type","infoItemBlock","socialLinks","Object","keys","contacts","contactsItem","imgTitle","imgSocial","Contact","contactTitle","contactValue","classNameIcon","contactsVal","ProfileStatusWithHooks","useState","editMod","setEditMod","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","ProfileMainInfo","goToEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","city","education","site","Profileinfo","savePhoto","saveProfile","editMode","setEditMode","Preloader","userInfo","infoWrap","avaWrap","avatar","photos","large","inputFileWrap","inputFile","target","files","htmlFor","initialValues","formData","then","Profile","profilePageWrap","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","isAuth","Component","compose","auth","withRouter","withAuthRedirect"],"mappings":"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","file":"static/js/4.eb776c69.chunk.js","sourcesContent":["export const requiredField = (value) => {\r\n    //Check if there is a value in the input field\r\n    if (value)\r\n        return undefined;\r\n\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength)\r\n        return `Max length is ${maxLength} symbols`;\r\n\r\n    return undefined;\r\n}","import React from \"react\";\r\nimport Class from './FormsControls.module.css';\r\nimport {requiredField} from \"../../../utils/validators\";\r\nimport {Field} from \"redux-form\";\r\n\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children, ...props}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={Class.formControl + \" \" + (hasError ? Class.error : \"\")}>\r\n            <div className={Class.inputWrap}>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    // Метод деструктуризации inpus, meta, ...props\r\n    const {input, meta, child, element, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, element, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, component, validateObj, props = {}, text = \"\") => (\r\n    <div className={Class.formControlWrap}>\r\n        <Field\r\n            placeholder={placeholder}\r\n            name={name}\r\n            component={component}\r\n            validate={validateObj}\r\n            {...props}\r\n        /> {text}\r\n    </div>\r\n)\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControlWrap\":\"FormsControls_formControlWrap__gyDky\",\"inputWrap\":\"FormsControls_inputWrap__go7U1\",\"formControl\":\"FormsControls_formControl__3GIpO\",\"error\":\"FormsControls_error__2z09f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoWrap\":\"Profileinfo_infoWrap__3fyIl\",\"info\":\"Profileinfo_info__NFyVz\",\"mainImg\":\"Profileinfo_mainImg__60J-N\",\"userInfo\":\"Profileinfo_userInfo__29l0j\",\"avatar\":\"Profileinfo_avatar__18N5m\",\"avaWrap\":\"Profileinfo_avaWrap__3HoX-\",\"ownInfo\":\"Profileinfo_ownInfo___EQff\",\"imgWrap\":\"Profileinfo_imgWrap__3ztce\",\"inputFileWrap\":\"Profileinfo_inputFileWrap__co6YH\",\"inputFile\":\"Profileinfo_inputFile__2DGVn\",\"inputfile\":\"Profileinfo_inputfile__nQqPF\",\"socialLinks\":\"Profileinfo_socialLinks__1FlxO\",\"formSummaryError\":\"Profileinfo_formSummaryError__1wEmo\",\"infoItemBlock\":\"Profileinfo_infoItemBlock__1UWRB\",\"contactsVal\":\"Profileinfo_contactsVal__2Rhgl\",\"contactsItem\":\"Profileinfo_contactsItem__2cdaJ\",\"imgTitle\":\"Profileinfo_imgTitle__hz4kU\",\"imgSocial\":\"Profileinfo_imgSocial__jcIiX\",\"facebook\":\"Profileinfo_facebook__1NUvf\",\"website\":\"Profileinfo_website__3GI7u\",\"vk\":\"Profileinfo_vk__10_ho\",\"twitter\":\"Profileinfo_twitter__2fBks\",\"instagram\":\"Profileinfo_instagram__3o7Xd\",\"youtube\":\"Profileinfo_youtube__3ATVd\",\"github\":\"Profileinfo_github__3uLWj\",\"mainLink\":\"Profileinfo_mainLink__19poW\",\"item\":\"Profileinfo_item__2oZXe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profilePageWrap\":\"profile_profilePageWrap__1ly23\",\"mainImg\":\"profile_mainImg__2Cz0J\",\"userInfo\":\"profile_userInfo__2DDqZ\",\"avatar\":\"profile_avatar__1DKIf\",\"infoText\":\"profile_infoText__1QrMX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsFeed\":\"MyPosts_postsFeed__1Aom0\",\"postForm\":\"MyPosts_postForm__1WUCc\",\"posts\":\"MyPosts_posts__2W8_2\",\"formWrap\":\"MyPosts_formWrap__2GVPl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__wy8gV\",\"imgWrap\":\"Post_imgWrap__3mf-U\",\"messagePanel\":\"Post_messagePanel__3S4hj\"};","import React from 'react';\r\nimport Class from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\r\n    return (\r\n        <div className={Class.item}>\r\n            <div className={Class.imgWrap}>\r\n                <img src={\"./img/posts-user.png\"} alt=\"user-post\"/>\r\n            </div>\r\n            <div className={Class.messagePanel}>\r\n                <span>{props.message}</span>\r\n                <div>\r\n                    <span>Like: {props.likeCount}</span>\r\n                    <span>Send</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React, {PureComponent} from 'react';\r\nimport Class from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, requiredField} from \"../../../../utils/validators\";\r\nimport {createField, Textarea} from \"../../../Common/FormsControls/FormsControls\";\r\n\r\n\r\n// Create a separate component for the form\r\nconst maxLength10 = maxLengthCreator(30);\r\nlet AddNewPostForm = (props) => {\r\n\r\n    return(\r\n        <form className={Class.postForm} onSubmit={props.handleSubmit}>\r\n                {createField(\"Post message\", \"newPostText\", Textarea, [requiredField, maxLength10])}\r\n            <button>Add post</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n    /*shouldComponentUpdate (nextProps, nextState) {\r\n        //If class Component if props and stein have not changed, then do not update the component.\r\n        //PureComponent - the component that itself does this check.\r\n        return nextProps != this.props || nextState != this.state;\r\n    }*/\r\n\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n\r\n        props.addPost(values.newPostText);\r\n    };\r\n\r\n    //render post from state\r\n    let postElement =\r\n        [...props.posts]\r\n            .reverse()\r\n            .map( post => <Post message={post.message} key={post.id} likeCount={post.likeCount}/> );\r\n\r\n    return (\r\n        <div className={Class.postsFeed}>\r\n            <AddNewPostFormRedux onSubmit={onAddPost} />\r\n            <div className={Class.posts}>\r\n                {postElement}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPost} from '../../../../redux/profile-reduser';\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n\r\n    }\r\n}\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps,\r\n    {addPost})(MyPosts);\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport Class from '../Profileinfo.module.css';\r\nimport {createField, Input, Textarea} from \"../../../../Common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\n\r\n\r\nconst ProfileInfoForm = ({handleSubmit, isOwner, profile, error}) => {\r\n    return (\r\n        <form className={`${Class.info}  ${Class.ownInfo}`} onSubmit={handleSubmit}>\r\n            <div className={`${Class.info}  ${Class.ownInfo}`}>\r\n                {isOwner &&\r\n                <div>\r\n                    <button onClick={() => {}}>Save</button>\r\n                </div>\r\n                }\r\n                {\r\n                    error &&\r\n                    <div className={Class.formSummaryError}>\r\n                        {error}\r\n                    </div>\r\n                }\r\n                <div>\r\n                    <span>Name: </span>\r\n                    {createField(\"Full name\", \"fullName\", Input, [], {type: \"text\"})}\r\n                </div>\r\n                <div className={`${Class.infoItemBlock}`}>\r\n                    <span>looking for a job:</span>\r\n                    {createField(\"\", \"lookingForAJob\", Input, [], {type: \"checkbox\"})}\r\n                </div>\r\n                <div className={`${Class.infoItemBlock}`}>\r\n                    <span>My professional skills:</span>\r\n                    {createField(\"My skills\", \"lookingForAJobDescription\", Textarea, [])}\r\n                </div>\r\n                <div className={`${Class.infoItemBlock}`}>\r\n                    <span>About me:</span>\r\n                    {createField(\"About me:\", \"aboutMe\", Textarea, [])}\r\n                </div>\r\n\r\n                <div className={`${Class.infoItemBlock}`}>\r\n                    <span>City:</span>\r\n                    <span>-----</span>\r\n                </div>\r\n                <div className={`${Class.infoItemBlock}`}>\r\n                    <span>Education:</span>\r\n                    <span>-----</span>\r\n                </div>\r\n                <div className={`${Class.infoItemBlock}`}>\r\n                    <span>Web Site:</span>\r\n                    <span>-----</span>\r\n                </div>\r\n            </div>\r\n            <div className={`${Class.info} ${Class.socialLinks}`}>\r\n                <h2>Contacts</h2>\r\n                <div className={`${Class.infoItemBlock}`}>\r\n                {//Using the object we generate contacts\r\n                    Object.keys(profile.contacts).map(key => {\r\n                    return (\r\n                        <div key={key} className={Class.contactsItem}>\r\n                            <div className={Class.imgTitle}>\r\n                                <span className={`${Class.imgSocial} ${Class[key]}`}></span>\r\n                                <span className={Class.item}>{key}</span>\r\n                            </div>\r\n                            {createField(key, \"contacts.\" + key, Input, [], {type: \"text\"})}\r\n\r\n                        </div>\r\n                        )\r\n                    })\r\n                }\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\n//Create a container component using HOC from ReduxForm\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileInfoForm);\r\n\r\n\r\n//We are returned the container component that we export\r\nexport default ProfileDataFormReduxForm;\r\n","import React from 'react';\r\nimport Class from '../Profileinfo.module.css';\r\n\r\n\r\n// Create a separate component for contacts\r\nconst Contact = ({contactTitle, contactValue, classNameIcon}) => {\r\n    return (\r\n        <div className={Class.contactsItem}>\r\n            <div className={Class.imgTitle}>\r\n                <span className={`${Class.imgSocial} ${Class[classNameIcon]}`}></span>\r\n                <span className={Class.item}>{contactTitle}</span>\r\n            </div>\r\n            <span className={Class.contactsVal}>{contactValue}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contact;","import React, {useState, useEffect} from 'react';\r\n\r\n\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    // let stateWithSetState = useState(false);// useState HOC (Higher order component)\r\n    // let editMod = stateWithSetState[0];// false inside\r\n    // let setEditMod = stateWithSetState[1];// The function that changes the first[0] value\r\n    // destructuring assignment - [a, b] = [10, 20]\r\n    let [editMod, setEditMod] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMod(true);\r\n    }\r\n\r\n    const deActivateEditMode = () => {\r\n        setEditMod(false);\r\n        props.updateStatus(status);\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMod &&\r\n                <div>{\r\n                    props.isOwner\r\n                    ? <span onDoubleClick={activateEditMode}>\r\n                            {props.status || \"------\"}\r\n                        </span>\r\n                    : <span>{props.status || \"------\"}</span>\r\n                }\r\n                </div>\r\n            }\r\n            {editMod &&\r\n                <div>\r\n                    <input\r\n                        autoFocus={true}\r\n                        onBlur={deActivateEditMode}\r\n                        onChange={onStatusChange}\r\n                        value={status}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport Class from '../Profileinfo.module.css';\r\nimport Contact from \"../Contact/Contact\";\r\nimport ProfileStatusWithHooks from \"../ProfileStatusWithHooks\";\r\n\r\n\r\n\r\n//We also create a separate component for the main user information\r\nconst ProfileMainInfo = ({profile, status, updateStatus, isOwner, goToEditMode}) => {\r\n    return (\r\n        <div className={`${Class.info}  ${Class.ownInfo}`}>\r\n            {isOwner &&\r\n            <div>\r\n                <button onClick={goToEditMode}>Edit profile</button>\r\n            </div>\r\n            }\r\n            <h1>Name: {profile.fullName}</h1>\r\n            <div className={`${Class.infoItemBlock}`}>\r\n                <span>Status:</span>\r\n                <ProfileStatusWithHooks\r\n                    status={status}\r\n                    updateStatus={updateStatus}\r\n                    isOwner={isOwner}/>\r\n            </div>\r\n            <div className={`${Class.infoItemBlock}`}>\r\n                <span>looking for a job:</span>\r\n                <span>{profile.lookingForAJob ? \"yes\" : \"no\"}</span>\r\n            </div>\r\n            {//If you are not looking for work then do not show the description of the skill\r\n                profile.lookingForAJob &&\r\n                <div className={`${Class.infoItemBlock}`}>\r\n                    <span>My professional skills:</span>\r\n                    <span>{profile.lookingForAJobDescription}</span>\r\n                </div>\r\n            }\r\n            <div className={`${Class.infoItemBlock}`}>\r\n                <span>About me:</span>\r\n                <span>{profile.aboutMe ? profile.aboutMe : \"-----\"}</span>\r\n            </div>\r\n            <div className={`${Class.infoItemBlock}`}>\r\n                <span>City:</span>\r\n                <span>{profile.city ? profile.city : \"-----\"}</span>\r\n            </div>\r\n            <div className={`${Class.infoItemBlock}`}>\r\n                <span>Education:</span>\r\n                <span>{profile.education ? profile.education : \"-----\"}</span>\r\n            </div>\r\n            <div className={`${Class.infoItemBlock}`}>\r\n                <span>Web Site:</span>\r\n                <span>{profile.site ? profile.site : \"-----\"}</span>\r\n            </div>\r\n            <div className={`${Class.info} ${Class.socialLinks}`}>\r\n                <h2>Contacts</h2>\r\n                <div className={`${Class.infoItemBlock}`}>\r\n\r\n                    {//Using the object we generate contacts\r\n                        Object.keys(profile.contacts).map(key => {\r\n                            return <Contact key={key} classNameIcon={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n                        })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileMainInfo;","import React, {useState} from 'react';\r\nimport Class from './Profileinfo.module.css';\r\nimport Preloader from \"../../../Common/Preloader/Preloader\";\r\nimport ProfileInfoForm from \"./ProfileInfoForm/ProfileInfoForm\";\r\nimport ProfileMainInfo from \"./ProfileMainInfo/ProfileMainInfo\";\r\n\r\n\r\n\r\nconst Profileinfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n    let [editMode, setEditMode] = useState();\r\n    if (!profile){\r\n        return <Preloader />\r\n    }\r\n    const onMainPhotosSelected = (e) => {\r\n\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false);\r\n            }\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className={Class.userInfo}>\r\n            <div className={`${Class.infoWrap}`}>\r\n                <div className={`${Class.info} ${Class.avaWrap}`}>\r\n                    <div className={Class.imgWrap}>\r\n                        <img className={Class.avatar}\r\n                             src={profile.photos.large || \"./img/list-users.png\"}\r\n                             alt=\"avatar\" />\r\n                    </div>\r\n                    {isOwner &&\r\n                        <div className={Class.inputFileWrap}>\r\n                            <input\r\n                                type={\"file\"}\r\n                                id={\"avatarImage\"}\r\n                                className={Class.inputFile}\r\n                                onChange={onMainPhotosSelected} />\r\n                            <label htmlFor={\"avatarImage\"}>Choose a file</label>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n            {editMode\r\n                ? <ProfileInfoForm\r\n                    initialValues={profile}\r\n                    profile={profile}\r\n                    status={status}\r\n                    updateStatus={updateStatus}\r\n                    isOwner={isOwner}\r\n                    onSubmit={onSubmit}\r\n                />\r\n                : <ProfileMainInfo\r\n                    profile={profile}\r\n                    status={status}\r\n                    updateStatus={updateStatus}\r\n                    isOwner={isOwner}\r\n                    goToEditMode={() => {setEditMode(true)}}/>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profileinfo;","import React from 'react';\r\nimport Class from './profile.module.css';\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport Profileinfo from \"./Profileinfo/Profileinfo\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div className={Class.profilePageWrap}>\r\n            <Profileinfo\r\n                savePhoto={props.savePhoto}\r\n                isOwner={props.isOwner}\r\n                profile={props.profile}\r\n                status={props.status}\r\n                saveProfile={props.saveProfile}\r\n                updateStatus={props.updateStatus}\r\n            />\r\n            <MyPostsContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Profile from \"./Profile\";\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../../redux/profile-reduser\";\r\nimport {withAuthRedirect} from \"../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n    //Component life cycle method. Mounting components.\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n    //Component life cycle method. redraws the component if there are changes in the state.\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                 isOwner={!this.props.match.params.userId}\r\n                 profile={this.props.profile}\r\n                 status={this.props.status}\r\n                 updateStatus={this.props.updateStatus}\r\n                 isAuth={this.props.isAuth}\r\n                 savePhoto={this.props.savePhoto}\r\n                 saveProfile={this.props.saveProfile}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\n//We pass props from the tate to the container component.\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);"],"sourceRoot":""}