{"version":3,"sources":["components/Main/Profile/Profileinfo/Profileinfo.module.css","components/Main/Profile/profile.module.css","components/Main/Profile/MyPosts/MyPosts.module.css","components/Main/Profile/MyPosts/Post/Post.module.css","components/Main/Profile/MyPosts/Post/Post.jsx","components/Main/Profile/MyPosts/MyPosts.jsx","components/Main/Profile/MyPosts/MyPostsContainer.jsx","components/Main/Profile/Profileinfo/ProfileInfoForm/ProfileInfoForm.jsx","components/Main/Profile/Profileinfo/Contact/Contact.jsx","components/Main/Profile/Profileinfo/ProfileStatusWithHooks.jsx","components/Main/Profile/Profileinfo/ProfileMainInfo/ProfileMainInfo.jsx","components/Main/Profile/Profileinfo/Profileinfo.jsx","components/Main/Profile/Profile.jsx","components/Main/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","Class","item","imgWrap","src","alt","messagePanel","message","likeCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","postForm","onSubmit","handleSubmit","createField","Textarea","requiredField","MyPosts","React","memo","createRef","postElement","posts","reverse","map","post","key","id","postsFeed","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","ProfileDataFormReduxForm","isOwner","profile","error","info","ownInfo","onClick","formSummaryError","Input","type","infoItemBlock","socialLinks","Object","keys","contacts","contactsItem","imgTitle","imgSocial","typeMainInfo","Contact","contactTitle","contactValue","classNameIcon","valMainInfo","ProfileStatusWithHooks","useState","editMod","setEditMod","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","ProfileMainInfo","goToEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Profileinfo","savePhoto","saveProfile","editMode","setEditMode","Preloader","userInfo","infoWrap","avaWrap","inputFileWrap","inputFile","target","files","length","htmlFor","avatar","photos","large","initialValues","formData","then","Profile","profilePageWrap","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","isAuth","Component","compose","auth","withRouter","withAuthRedirect"],"mappings":"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","file":"static/js/3.01a5da1f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoWrap\":\"Profileinfo_infoWrap__3fyIl\",\"info\":\"Profileinfo_info__NFyVz\",\"mainImg\":\"Profileinfo_mainImg__60J-N\",\"userInfo\":\"Profileinfo_userInfo__29l0j\",\"avatar\":\"Profileinfo_avatar__18N5m\",\"typeMainInfo\":\"Profileinfo_typeMainInfo__wp925\",\"avaWrap\":\"Profileinfo_avaWrap__3HoX-\",\"ownInfo\":\"Profileinfo_ownInfo___EQff\",\"imgWrap\":\"Profileinfo_imgWrap__3ztce\",\"inputFileWrap\":\"Profileinfo_inputFileWrap__co6YH\",\"inputFile\":\"Profileinfo_inputFile__2DGVn\",\"socialLinks\":\"Profileinfo_socialLinks__1FlxO\",\"formSummaryError\":\"Profileinfo_formSummaryError__1wEmo\",\"infoItemBlock\":\"Profileinfo_infoItemBlock__1UWRB\",\"valMainInfo\":\"Profileinfo_valMainInfo__14uQi\",\"contactsItem\":\"Profileinfo_contactsItem__2cdaJ\",\"imgTitle\":\"Profileinfo_imgTitle__hz4kU\",\"imgSocial\":\"Profileinfo_imgSocial__jcIiX\",\"facebook\":\"Profileinfo_facebook__1NUvf\",\"website\":\"Profileinfo_website__3GI7u\",\"vk\":\"Profileinfo_vk__10_ho\",\"twitter\":\"Profileinfo_twitter__2fBks\",\"instagram\":\"Profileinfo_instagram__3o7Xd\",\"youtube\":\"Profileinfo_youtube__3ATVd\",\"github\":\"Profileinfo_github__3uLWj\",\"mainLink\":\"Profileinfo_mainLink__19poW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profilePageWrap\":\"profile_profilePageWrap__1ly23\",\"mainImg\":\"profile_mainImg__2Cz0J\",\"userInfo\":\"profile_userInfo__2DDqZ\",\"avatar\":\"profile_avatar__1DKIf\",\"infoText\":\"profile_infoText__1QrMX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsFeed\":\"MyPosts_postsFeed__1Aom0\",\"postForm\":\"MyPosts_postForm__1WUCc\",\"posts\":\"MyPosts_posts__2W8_2\",\"formWrap\":\"MyPosts_formWrap__2GVPl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__wy8gV\",\"imgWrap\":\"Post_imgWrap__3mf-U\",\"messagePanel\":\"Post_messagePanel__3S4hj\"};","import React from 'react';\r\nimport Class from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\r\n    return (\r\n        <div className={Class.item}>\r\n            <div className={Class.imgWrap}>\r\n                <img src={\"./img/posts-user.png\"} alt=\"user-post\"/>\r\n            </div>\r\n            <div className={Class.messagePanel}>\r\n                <span>{props.message}</span>\r\n                <div>\r\n                    <span>Like: {props.likeCount}</span>\r\n                    <span>Send</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React, {PureComponent} from 'react';\r\nimport Class from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, requiredField} from \"../../../../utils/validators\";\r\nimport {createField, Textarea} from \"../../../Common/FormsControls/FormsControls\";\r\n\r\n\r\n// Create a separate component for the form\r\nconst maxLength10 = maxLengthCreator(30);\r\nlet AddNewPostForm = (props) => {\r\n\r\n    return(\r\n        <form className={Class.postForm} onSubmit={props.handleSubmit}>\r\n                {createField(\"Post message\", \"newPostText\", Textarea, [requiredField, maxLength10])}\r\n            <button>Add post</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n    /*shouldComponentUpdate (nextProps, nextState) {\r\n        //If class Component if props and stein have not changed, then do not update the component.\r\n        //PureComponent - the component that itself does this check.\r\n        return nextProps != this.props || nextState != this.state;\r\n    }*/\r\n\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n\r\n        props.addPost(values.newPostText);\r\n    };\r\n\r\n    //render post from state\r\n    let postElement =\r\n        [...props.posts]\r\n            .reverse()\r\n            .map( post => <Post message={post.message} key={post.id} likeCount={post.likeCount}/> );\r\n\r\n    return (\r\n        <div className={Class.postsFeed}>\r\n            <AddNewPostFormRedux onSubmit={onAddPost} />\r\n            <div className={Class.posts}>\r\n                {postElement}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPost} from '../../../../redux/profile-reduser';\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n\r\n    }\r\n}\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps,\r\n    {addPost})(MyPosts);\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport Class from '../Profileinfo.module.css';\r\nimport {createField, Input, Textarea} from \"../../../../Common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\n\r\n\r\nconst ProfileInfoForm = ({handleSubmit, isOwner, profile, error}) => {\r\n    return (\r\n        <form className={`${Class.info}  ${Class.ownInfo}`} onSubmit={handleSubmit}>\r\n            <div className={`${Class.info}  ${Class.ownInfo}`}>\r\n                {isOwner &&\r\n                <div>\r\n                    <button onClick={() => {}}>Save</button>\r\n                </div>\r\n                }\r\n                {\r\n                    error &&\r\n                    <div className={Class.formSummaryError}>\r\n                        {error}\r\n                    </div>\r\n                }\r\n                <div>\r\n                    <span>Name: </span>\r\n                    {createField(\"Full name\", \"fullName\", Input, [], {type: \"text\"})}\r\n                </div>\r\n                <div className={`${Class.infoItemBlock}`}>\r\n                    <span>looking for a job:</span>\r\n                    {createField(\"\", \"lookingForAJob\", Input, [], {type: \"checkbox\"})}\r\n                </div>\r\n                <div className={`${Class.infoItemBlock}`}>\r\n                    <span>My professional skills:</span>\r\n                    {createField(\"My skills\", \"lookingForAJobDescription\", Textarea, [])}\r\n                </div>\r\n                <div className={`${Class.infoItemBlock}`}>\r\n                    <span>About me:</span>\r\n                    {createField(\"About me:\", \"aboutMe\", Textarea, [])}\r\n                </div>\r\n            </div>\r\n            <div className={`${Class.info} ${Class.socialLinks}`}>\r\n                <h2>Contacts</h2>\r\n                <div className={`${Class.infoItemBlock}`}>\r\n                {//Using the object we generate contacts\r\n                    Object.keys(profile.contacts).map(key => {\r\n                    return (\r\n                        <div key={key} className={Class.contactsItem}>\r\n                            <div className={Class.imgTitle}>\r\n                                <span className={`${Class.imgSocial} ${Class[key]}`}></span>\r\n                                <span className={Class.typeMainInfo}>{key}</span>\r\n                            </div>\r\n                            {createField(key, \"contacts.\" + key, Input, [], {type: \"text\"})}\r\n\r\n                        </div>\r\n                        )\r\n                    })\r\n                }\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\n//Create a container component using HOC from ReduxForm\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileInfoForm);\r\n\r\n\r\n//We are returned the container component that we export\r\nexport default ProfileDataFormReduxForm;\r\n","import React from 'react';\r\nimport Class from '../Profileinfo.module.css';\r\n\r\n\r\n// Create a separate component for contacts\r\nconst Contact = ({contactTitle, contactValue, classNameIcon}) => {\r\n    return (\r\n        <div className={Class.contactsItem}>\r\n            <div className={Class.imgTitle}>\r\n                <span className={`${Class.imgSocial} ${Class[classNameIcon]}`}></span>\r\n                <span className={Class.typeMainInfo}>{contactTitle}</span>\r\n            </div>\r\n            <span className={Class.valMainInfo}>{contactValue}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contact;","import React, {useState, useEffect} from 'react';\r\nimport Class from './Profileinfo.module.css';\r\n\r\n\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    // let stateWithSetState = useState(false);// useState HOC (Higher order component)\r\n    // let editMod = stateWithSetState[0];// false inside\r\n    // let setEditMod = stateWithSetState[1];// The function that changes the first[0] value\r\n    // destructuring assignment - [a, b] = [10, 20]\r\n    let [editMod, setEditMod] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n    // useEffect monitor the state of the second parameter and if it changes, then it will re-direct the component.\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMod(true);\r\n    }\r\n\r\n    const deActivateEditMode = () => {\r\n        setEditMod(false);\r\n        props.updateStatus(status);\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {!editMod &&\r\n                <div className={Class.valMainInfo}>{\r\n                    props.isOwner\r\n                    ? <span onDoubleClick={activateEditMode}>\r\n                            {props.status || \"------\"}\r\n                        </span>\r\n                    : <span>{props.status || \"------\"}</span>\r\n                }\r\n                </div>\r\n            }\r\n            {editMod &&\r\n                <div>\r\n                    <input\r\n                        type=\"text\"\r\n                        autoFocus={true}\r\n                        onBlur={deActivateEditMode}\r\n                        onChange={onStatusChange}\r\n                        value={status}/>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport Class from '../Profileinfo.module.css';\r\nimport Contact from \"../Contact/Contact\";\r\nimport ProfileStatusWithHooks from \"../ProfileStatusWithHooks\";\r\n\r\n\r\n\r\n//We also create a separate component for the main user information\r\nconst ProfileMainInfo = ({profile, status, updateStatus, isOwner, goToEditMode}) => {\r\n    return (\r\n        <div className={`${Class.info}  ${Class.ownInfo}`}>\r\n            {isOwner &&\r\n            <div>\r\n                <button onClick={goToEditMode}>Edit profile</button>\r\n            </div>\r\n            }\r\n            <h1>Name: {profile.fullName}</h1>\r\n            <div className={`${Class.infoItemBlock}`}>\r\n                <span className={Class.typeMainInfo}>Status:</span>\r\n                <ProfileStatusWithHooks\r\n                    status={status}\r\n                    updateStatus={updateStatus}\r\n                    isOwner={isOwner}/>\r\n            </div>\r\n            <div className={`${Class.infoItemBlock}`}>\r\n                <span className={Class.typeMainInfo}>looking for a job:</span>\r\n                <span className={Class.valMainInfo}>{profile.lookingForAJob ? \"yes\" : \"no\"}</span>\r\n            </div>\r\n            {//If you are not looking for work then do not show the description of the skill\r\n                profile.lookingForAJob &&\r\n                <div className={`${Class.infoItemBlock}`}>\r\n                    <span className={Class.typeMainInfo}>My professional skills:</span>\r\n                    <span className={Class.valMainInfo}>{profile.lookingForAJobDescription}</span>\r\n                </div>\r\n            }\r\n            <div className={`${Class.infoItemBlock}`}>\r\n                <span className={Class.typeMainInfo}>About me:</span>\r\n                <span className={Class.valMainInfo}>{profile.aboutMe ? profile.aboutMe : \"-----\"}</span>\r\n            </div>\r\n            <div className={`${Class.info} ${Class.socialLinks}`}>\r\n                <h2>Contacts</h2>\r\n                <div className={`${Class.infoItemBlock}`}>\r\n                    {//Using the object we generate contacts\r\n                        Object.keys(profile.contacts).map(key => {\r\n                            return <Contact key={key} classNameIcon={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n                        })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileMainInfo;","import React, {useState} from 'react';\r\nimport Class from './Profileinfo.module.css';\r\nimport Preloader from \"../../../Common/Preloader/Preloader\";\r\nimport ProfileInfoForm from \"./ProfileInfoForm/ProfileInfoForm\";\r\nimport ProfileMainInfo from \"./ProfileMainInfo/ProfileMainInfo\";\r\n\r\n\r\n\r\nconst Profileinfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n    let [editMode, setEditMode] = useState();\r\n    if (!profile){\r\n        return <Preloader />\r\n    }\r\n    const onMainPhotosSelected = (e) => {\r\n\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        const promise = saveProfile(formData);\r\n        promise.then(\r\n            () => {\r\n                setEditMode(false);\r\n            }\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className={Class.userInfo}>\r\n            <div className={`${Class.infoWrap}`}>\r\n                <div className={`${Class.info} ${Class.avaWrap}`}>\r\n                    {isOwner &&\r\n                    <div className={Class.inputFileWrap}>\r\n                        <input\r\n                            type={\"file\"}\r\n                            id={\"avatarImage\"}\r\n                            className={Class.inputFile}\r\n                            onChange={onMainPhotosSelected} />\r\n                        <label htmlFor={\"avatarImage\"}>Choose a photo</label>\r\n                    </div>\r\n                    }\r\n                    <div className={Class.imgWrap}>\r\n                        <img className={Class.avatar}\r\n                             src={profile.photos.large || \"./img/list-users.png\"}\r\n                             alt=\"avatar\" />\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            {editMode\r\n                ? <ProfileInfoForm\r\n                    initialValues={profile}\r\n                    profile={profile}\r\n                    status={status}\r\n                    updateStatus={updateStatus}\r\n                    isOwner={isOwner}\r\n                    onSubmit={onSubmit}\r\n                />\r\n                : <ProfileMainInfo\r\n                    profile={profile}\r\n                    status={status}\r\n                    updateStatus={updateStatus}\r\n                    isOwner={isOwner}\r\n                    goToEditMode={() => {setEditMode(true)}}/>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profileinfo;","import React from 'react';\r\nimport Class from './profile.module.css';\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport Profileinfo from \"./Profileinfo/Profileinfo\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div className={Class.profilePageWrap}>\r\n            <Profileinfo\r\n                savePhoto={props.savePhoto}\r\n                isOwner={props.isOwner}\r\n                profile={props.profile}\r\n                status={props.status}\r\n                saveProfile={props.saveProfile}\r\n                updateStatus={props.updateStatus}\r\n            />\r\n            <MyPostsContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Profile from \"./Profile\";\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../../redux/profile-reduser\";\r\nimport {withAuthRedirect} from \"../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        // match came thanks withrouter that connects us to the url\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n    //Component life cycle method. Mounting components.\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n    //Component life cycle method. redraws the component if there are changes in the state.\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                 isOwner={!this.props.match.params.userId}\r\n                 profile={this.props.profile}\r\n                 status={this.props.status}\r\n                 updateStatus={this.props.updateStatus}\r\n                 isAuth={this.props.isAuth}\r\n                 savePhoto={this.props.savePhoto}\r\n                 saveProfile={this.props.saveProfile}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\n//We pass props from the tate to the container component.\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);"],"sourceRoot":""}