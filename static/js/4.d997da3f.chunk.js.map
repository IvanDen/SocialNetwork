{"version":3,"sources":["utils/validators.js","components/Common/FormsControls/FormsControls.js","components/Common/FormsControls/FormsControls.module.css","components/Main/Profile/Profileinfo/Profileinfo.module.css","components/Main/Profile/profile.module.css","components/Main/Profile/MyPosts/MyPosts.module.css","components/Main/Profile/MyPosts/Post/Post.module.css","components/Main/Profile/MyPosts/Post/Post.jsx","components/Main/Profile/MyPosts/MyPosts.jsx","components/Main/Profile/MyPosts/MyPostsContainer.jsx","components/Main/Profile/Profileinfo/ProfileStatus.jsx","components/Main/Profile/Profileinfo/ProfileStatusWithHooks.jsx","components/Main/Profile/Profileinfo/Profileinfo.jsx","components/Main/Profile/Profile.jsx","components/Main/Profile/ProfileContainer.jsx"],"names":["requiredField","value","maxLengthCreator","maxLength","length","FormControl","input","meta","touched","error","children","hasError","className","Styles","formControl","inputWrap","Textarea","props","restProps","child","element","Input","createField","placeholder","name","component","validateObj","text","validate","module","exports","Post","Class","item","imgWrap","src","alt","messagePanel","message","likeCount","maxLength10","AddNewPostFormRedux","reduxForm","form","postForm","onSubmit","handleSubmit","MyPosts","React","memo","createRef","postElement","posts","reverse","map","post","key","id","postsFeed","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","Component","ProfileStatusWithHooks","useState","editMod","setEditMod","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","Profileinfo","profile","userInfo","infoWrap","info","avaWrap","userId","photos","large","avatar","small","ownInfo","fullName","infoItemBlock","lookingForAJob","lookingForAJobDescription","city","education","site","socialsLincs","contactsItem","imgTitle","imgSocial","facebook","contactsVal","contacts","website","vk","twitter","instagram","youtube","github","mainLink","Preloader","Profile","profilePageWrap","ProfileContainer","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","isAuth","compose","auth","withRouter","withAuthRedirect"],"mappings":"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","file":"static/js/4.d997da3f.chunk.js","sourcesContent":["export const requiredField = (value) => {\r\n    //Check if there is a value in the input field\r\n    if (value)\r\n        return undefined;\r\n\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength)\r\n        return `Max length is ${maxLength} symbols`;\r\n\r\n    return undefined;\r\n}","import React from \"react\";\r\nimport Styles from './FormsControls.module.css';\r\nimport {requiredField} from \"../../../utils/validators\";\r\nimport {Field} from \"redux-form\";\r\n\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children, ...props}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={Styles.formControl + \" \" + (hasError ? Styles.error : \"\")}>\r\n            <div className={Styles.inputWrap}>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    // Метод деструктуризации inpus, meta, ...props\r\n    const {input, meta, child, element, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, element, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, component, validateObj, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field\r\n            placeholder={placeholder}\r\n            name={name}\r\n            component={component}\r\n            validate={validateObj}\r\n            {...props}\r\n        /> {text}\r\n    </div>\r\n)\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3GIpO\",\"error\":\"FormsControls_error__2z09f\",\"inputWrap\":\"FormsControls_inputWrap__go7U1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainImg\":\"Profileinfo_mainImg__60J-N\",\"userInfo\":\"Profileinfo_userInfo__29l0j\",\"avatar\":\"Profileinfo_avatar__18N5m\",\"avaWrap\":\"Profileinfo_avaWrap__3HoX-\",\"infoWrap\":\"Profileinfo_infoWrap__3fyIl\",\"info\":\"Profileinfo_info__NFyVz\",\"infoItemBlock\":\"Profileinfo_infoItemBlock__1UWRB\",\"contactsVal\":\"Profileinfo_contactsVal__2Rhgl\",\"contactsItem\":\"Profileinfo_contactsItem__2cdaJ\",\"imgTitle\":\"Profileinfo_imgTitle__hz4kU\",\"imgSocial\":\"Profileinfo_imgSocial__jcIiX\",\"facebook\":\"Profileinfo_facebook__1NUvf\",\"website\":\"Profileinfo_website__3GI7u\",\"vk\":\"Profileinfo_vk__10_ho\",\"twitter\":\"Profileinfo_twitter__2fBks\",\"instagram\":\"Profileinfo_instagram__3o7Xd\",\"youtube\":\"Profileinfo_youtube__3ATVd\",\"github\":\"Profileinfo_github__3uLWj\",\"mainLink\":\"Profileinfo_mainLink__19poW\",\"item\":\"Profileinfo_item__2oZXe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profilePageWrap\":\"profile_profilePageWrap__1ly23\",\"mainImg\":\"profile_mainImg__2Cz0J\",\"userInfo\":\"profile_userInfo__2DDqZ\",\"avatar\":\"profile_avatar__1DKIf\",\"infoText\":\"profile_infoText__1QrMX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsFeed\":\"MyPosts_postsFeed__1Aom0\",\"postForm\":\"MyPosts_postForm__1WUCc\",\"posts\":\"MyPosts_posts__2W8_2\",\"formWrap\":\"MyPosts_formWrap__2GVPl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__wy8gV\",\"imgWrap\":\"Post_imgWrap__3mf-U\",\"messagePanel\":\"Post_messagePanel__3S4hj\"};","import React from 'react';\r\nimport Class from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\r\n    return (\r\n        <div className={Class.item}>\r\n            <div className={Class.imgWrap}>\r\n                <img src={\"./img/posts-user.png\"} alt=\"user-post\"/>\r\n            </div>\r\n            <div className={Class.messagePanel}>\r\n                <span>{props.message}</span>\r\n                <div>\r\n                    <span>Like: {props.likeCount}</span>\r\n                    <span>Send</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React, {PureComponent} from 'react';\r\nimport Class from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, requiredField} from \"../../../../utils/validators\";\r\nimport {createField, Textarea} from \"../../../Common/FormsControls/FormsControls\";\r\n\r\n\r\n// Create a separate component for the form\r\nconst maxLength10 = maxLengthCreator(30);\r\nlet AddNewPostForm = (props) => {\r\n\r\n    return(\r\n        <form className={Class.postForm} onSubmit={props.handleSubmit}>\r\n                {createField(\"Post message\", \"newPostText\", Textarea, [requiredField, maxLength10])}\r\n            <button>Add post</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n    /*shouldComponentUpdate (nextProps, nextState) {\r\n        //If class Component if props and stein have not changed, then do not update the component.\r\n        //PureComponent - the component that itself does this check.\r\n        return nextProps != this.props || nextState != this.state;\r\n    }*/\r\n\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n\r\n        props.addPost(values.newPostText);\r\n    };\r\n\r\n    //render post from state\r\n    let postElement =\r\n        [...props.posts]\r\n            .reverse()\r\n            .map( post => <Post message={post.message} key={post.id} likeCount={post.likeCount}/> );\r\n\r\n    return (\r\n        <div className={Class.postsFeed}>\r\n            <AddNewPostFormRedux onSubmit={onAddPost} />\r\n            <div className={Class.posts}>\r\n                {postElement}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPost} from '../../../../redux/profile-reduser';\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n\r\n    }\r\n}\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps,\r\n    {addPost})(MyPosts);\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport Class from './Profileinfo.module.css';\r\nimport Profileinfo from \"./Profileinfo\";\r\n\r\n\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        // асинхронный запрос поменять спан на импут, обновить стейт\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n    deActivateEditMode = () => {\r\n        // асинхронный запрос поменять спан на импут, обновить стейт\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n           status: e.currentTarget.value\r\n        })\r\n    }\r\n    // метод жизненого цикла componentDidUpdate\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={this.activateEditMode}>{this.props.status || \"------\"}</span>\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deActivateEditMode} value={this.state.status} />\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React, {useState, useEffect} from 'react';\r\nimport Class from './Profileinfo.module.css';\r\nimport Profileinfo from \"./Profileinfo\";\r\n\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    // let stateWithSetState = useState(false);// useState HOC (Higher order component)\r\n    // let editMod = stateWithSetState[0];// false inside\r\n    // let setEditMod = stateWithSetState[1];// The function that changes the first[0] value\r\n    // destructuring assignment - [a, b] = [10, 20]\r\n    let [editMod, setEditMod] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMod(true);\r\n    }\r\n\r\n    const deActivateEditMode = () => {\r\n        setEditMod(false);\r\n        props.updateStatus(status);\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMod &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>\r\n                        {props.status || \"------\"}\r\n                    </span>\r\n                </div>\r\n            }\r\n            {editMod &&\r\n                <div>\r\n                    <input\r\n                        autoFocus={true}\r\n                        onBlur={deActivateEditMode}\r\n                        onChange={onStatusChange}\r\n                        value={status}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport Class from './Profileinfo.module.css';\r\nimport Preloader from \"../../../Common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\n\r\n\r\nconst Profileinfo = ({profile, status, updateStatus, ...props}) => {\r\n    if (!profile){\r\n        return <Preloader />\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={Class.userInfo}>\r\n\r\n                <div className={`${Class.infoWrap}`}>\r\n                    <div className={`${Class.info} ${Class.avaWrap}`}>\r\n\r\n                        {profile.userId != 1617\r\n                            ? profile.photos.large != null\r\n                                ? <img className={Class.avatar} src={profile.photos.large} alt=\"avatar\" />\r\n                                : <img className={Class.avatar} src={profile.photos.small != null ? profile.photos.small : \"./img/list-users.png\"} alt=\"avatar\" />\r\n                            : <img className={Class.avatar} src={\"./img/myAvatar.png\"} alt=\"avatar\" />\r\n                        }\r\n\r\n                    </div>\r\n                    <div className={`${Class.info}  ${Class.ownInfo}`}>\r\n                        <h1>Name: {profile.fullName}</h1>\r\n\r\n                        <span className={`${Class.infoItemBlock}`}>\r\n                            Status: <ProfileStatusWithHooks\r\n                            status={status}\r\n                            updateStatus={updateStatus} />\r\n                        </span>\r\n\r\n                        <span className={`${Class.infoItemBlock}`}>\r\n                            looking for a job: <span>{profile.lookingForAJob === false ? \"no\" : \"yes\"}</span>\r\n                        </span>\r\n                        <span className={`${Class.infoItemBlock}`}>\r\n                            looking for a job description: <span>{profile.lookingForAJobDescription}</span>\r\n                        </span>\r\n                        <span className={`${Class.infoItemBlock}`}>City: {profile.city ? profile.city : \"-----\"}</span>\r\n                        <span className={`${Class.infoItemBlock}`}>Education: {profile.education ? profile.education : \"-----\"}</span>\r\n                        <span className={`${Class.infoItemBlock}`}>Web Site: {profile.site ? profile.site : \"-----\"}</span>\r\n                    </div>\r\n                    <div className={`${Class.info} ${Class.socialsLincs}`}>\r\n                        <h2>Contacts</h2>\r\n                        <div className={`${Class.infoItemBlock}`}>\r\n                            <div className={Class.contactsItem}>\r\n                                <div className={Class.imgTitle}>\r\n                                    <span className={`${Class.imgSocial} ${Class.facebook}`}></span>\r\n                                    <span className={Class.item}>Facebook: </span>\r\n                                </div>\r\n                                <span className={Class.contactsVal}>{profile.contacts.facebook}</span>\r\n                            </div>\r\n                            <div className={Class.contactsItem}>\r\n                                <div className={Class.imgTitle}>\r\n                                    <span className={`${Class.imgSocial} ${Class.website}`}></span>\r\n                                    <span className={Class.item}>Website: </span>\r\n                                </div>\r\n                                <span className={Class.contactsVal}>{profile.contacts.website}</span>\r\n                            </div>\r\n                            <div className={Class.contactsItem}>\r\n                                <div className={Class.imgTitle}>\r\n                                    <span className={`${Class.imgSocial} ${Class.vk}`}></span>\r\n                                    <span className={Class.item}>VK: </span>\r\n                                </div>\r\n                                <span className={Class.contactsVal}>{profile.contacts.vk}</span>\r\n                            </div>\r\n                            <div className={Class.contactsItem}>\r\n                                <div className={Class.imgTitle}>\r\n                                    <span className={`${Class.imgSocial} ${Class.twitter}`}></span>\r\n                                    <span className={Class.item}>Twitter: </span>\r\n                                </div>\r\n                                <span className={Class.contactsVal}>{profile.contacts.twitter}</span>\r\n                            </div>\r\n                            <div className={Class.contactsItem}>\r\n                                <div className={Class.imgTitle}>\r\n                                    <span className={`${Class.imgSocial} ${Class.instagram}`}></span>\r\n                                    <span className={Class.item}>Instagram: </span>\r\n                                </div>\r\n                                <span className={Class.contactsVal}>{profile.contacts.instagram}</span>\r\n                            </div>\r\n                            <div className={Class.contactsItem}>\r\n                                <div className={Class.imgTitle}>\r\n                                    <span className={`${Class.imgSocial} ${Class.youtube}`}></span>\r\n                                    <span className={Class.item}>Youtube: </span>\r\n                                </div>\r\n                                <span className={Class.contactsVal}>{profile.contacts.youtube}</span>\r\n                            </div>\r\n                            <div className={Class.contactsItem}>\r\n                                <div className={Class.imgTitle}>\r\n                                    <span className={`${Class.imgSocial} ${Class.github}`}></span>\r\n                                    <span className={Class.item}>Github: </span>\r\n                                </div>\r\n                                <span className={Class.contactsVal}>{profile.contacts.github}</span>\r\n                            </div>\r\n                            <div className={Class.contactsItem}>\r\n                                <div className={Class.imgTitle}>\r\n                                    <span className={`${Class.imgSocial} ${Class.mainLink}`}></span>\r\n                                    <span className={Class.item}>MainLink: </span>\r\n                                </div>\r\n                                <span className={Class.contactsVal}>{profile.contacts.mainLink}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profileinfo;","import React from 'react';\r\nimport Class from './profile.module.css';\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport Profileinfo from \"./Profileinfo/Profileinfo\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div className={Class.profilePageWrap}>\r\n            <Profileinfo\r\n                profile={props.profile}\r\n                status={props.status}\r\n                updateStatus={props.updateStatus}\r\n            />\r\n            <MyPostsContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Profile from \"./Profile\";\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../../redux/profile-reduser\";\r\nimport {withAuthRedirect} from \"../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId)\r\n   }\r\n    render() {\r\n        // if (!this.props.isAuth) return <Redirect to={'/login'} />\r\n        return (\r\n            <Profile {...this.props}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n                     isAuth={this.props.isAuth}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);"],"sourceRoot":""}